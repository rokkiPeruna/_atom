# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#configuring-with-cson
#
#OWN CUSTOMS
'body':
  'alt-,': 'window:focus-pane-on-left'
  'alt-.': 'window:focus-pane-on-right'
'.platform-win32 .tree-view, .platform-linux .tree-view':
  #Finnish layout!
  '!': 'tree-view:open-selected-entry-in-pane-1'
  '"': 'tree-view:open-selected-entry-in-pane-2'
  '#': 'tree-view:open-selected-entry-in-pane-3'
  'Â¤': 'tree-view:open-selected-entry-in-pane-4'
'atom-text-editor':
  'alt-up': 'keyboard-scroll:scrollUpWithCursor'
  'alt-down': 'keyboard-scroll:scrollDownWithCursor'
  'ctrl-alt-up': 'keyboard-scroll:scrollUp'
  'ctrl-alt-down': 'keyboard-scroll:scrollDown'
